{
  "openapi": "3.0.0",
  "info": {
    "title": "API Ricky and Morty Nfts",
    "description": "API das Nfts do Ricky and Morty - Fins didáticos. Autores: Lucas Santos (https://www.linkedin.com/in/mlucasdev) e Daniel Vinhas (https://www.linkedin.com/in/vinhasdaniel)",
    "contact": {
      "email": "lucasmsantos819@gmail.com, vinhas.daniel@gmail.com"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://api-rickyandmorty-nfts.onrender.com",
      "description": "API produção - Render"
    },
    {
      "url": "http://localhost:3001",
      "description": "API local"
    }
  ],
  "paths": {
    "/users/create-admin": {
      "post": {
        "summary": "Criar o Admin",
        "description": "Cria o Admin. Apenas o Admin pode criar, editar e deletar novos personagens, só pode existir um Admin e Admin não tem autorização para fazer compras." ,
        "tags": ["Users"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              },
              "examples": {
                "Users": {
                  "value": {
                    "name": "Admin",
                    "username": "Admin",
                    "email": "admin@admin.com",
                    "password": "admins",
                    "photo": "https://www.bitcao.com.br/blog/wp-content/uploads/2016/12/wsi-imageoptim-perroenlaoficina-720x480.jpg"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "500": {
            "description": "Ops, tivemos um pequeno problema. Tente novamente mais tarde."
          },
          "400": {
            "description": "Alguns campos estão faltando. Os campos são: 'name', 'username', email, 'password' e 'photo'. || Esse usuário já existe! || Já existe um admin criado. || Erro ao criar usuário!"
          },
          "201": {
            "description": "Admin criado com sucesso!",
            "content": {
              "application/json": {
                "schemma": {
                  "type": "object",
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        }
      }
    },
    "/users/create": {
      "post": {
        "summary": "Criar um novo usuário",
        "description": "Rota responsável por criar um novo usuário. São necessários um minimo de 3 characteres para os campos: name e username, e 6 para o password.",
        "tags": ["Users"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              },
              "examples": {
                "Users": {
                  "value": {
                    "name": "Neymar Jr",
                    "username": "neymar",
                    "email": "neymar@gmail.com",
                    "password": "123456",
                    "photo": "https://i.imgur.com/Ry1cb5M.png"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "500": {
            "description": "Ops, tivemos um pequeno problema. Tente novamente mais tarde."
          },
          "400": {
            "description": "Alguns campos estão faltando. Os campos são: 'name', 'username', email, 'password' e 'photo'. || Esse usuário já existe! || Erro ao criar usuário!"
          },
          "201": {
            "description": "Usuário cadastrado com sucesso!",
            "content": {
              "application/json": {
                "schemma": {
                  "type": "object",
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        }
      }
    },
    "/users/find-all": {
      "get": {
        "summary": "Buscar todos os usuários",
        "description": "Rota responsável por buscar todos os usuários. É necessário autenticação de Admin",
        "tags": ["Users"],
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "500": {
            "description": "Ops, tivemos um pequeno problema. Tente novamente mais tarde."
          },
          "401": {
            "description": "Token inválido || O token não foi informado! || Token mal formatado! || Sem permissão!"
          },
          "404": {
            "description": "Não existem usuários cadastrados."
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/find/{id}": {
      "get": {
        "summary": "Buscar um usuário por ID. É necessário autenticação de Admin",
        "description": "Rota responsável por buscar um único usuário por ID",
        "tags": ["Users"],
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "type": "string",
            "description": "Id do usuário para a busca",
            "required": true
          }
        ],
        "responses": {
          "500": {
            "description": "Ops, tivemos um pequeno problema. Tente novamente mais tarde."
          },
          "401": {
            "description": "Token inválido || O token não foi informado! || Token mal formatado! || Sem permissão! || Id inválido"
          },
          "404": {
            "description": "Não existem usuários com esse Id!"
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/my-account": {
      "get": {
        "summary": "Página de perfil",
        "description": "Rota responsável pela página de perfil",
        "tags": ["Users"],
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "500": {
            "description": "Ops, tivemos um pequeno problema. Tente novamente mais tarde."
          },
          "401": {
            "description": "Token inválido || O token não foi informado! || Token mal formatado!"
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/find-properties": {
      "get": {
        "summary": "Lista de NFTs do Usuário",
        "description": "Rota responsável por listar todos as NFTs pertencentes ao Usuário",
        "tags": ["Users"],
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "500": {
            "description": "Ops, tivemos um pequeno problema. Tente novamente mais tarde."
          },
          "401": {
            "description": "Token inválido || O token não foi informado! || Token mal formatado!"
          },
          "404": {
            "description": "Nenhuma NFT encontrada"
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "summary": "Entrar em Rick and Morty NFTs",
        "description": "Rota responsável fazer o login de usuário e Admin",
        "tags": ["Auth"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              },
              "examples": {
                "User": {
                  "value": {
                    "email": "admin@admin.com",
                    "password": "admins"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "500": {
            "description": "Ops, tivemos um pequeno problema. Tente novamente mais tarde.."
          },
          "400": {
            "description": "Senha inválida."
          },
          "404": {
            "description": "Usuário não encontrado."
          },
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/characters/create": {
      "post": {
        "summary": "Cadastrar um personagem",
        "description": "Rota responsável por cadastrar um novo personagem. É necessário autenticação de Admin",
        "tags": ["Characters"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Characters"
              },
              "examples": {
                "Characters": {
                  "value": {
                    "name": "Albert Einstein",
                    "price": 300,
                    "commission": 10
                  }
                }
              }
            }
          }
        },
        "responses": {
          "500": {
            "description": "Ops, tivemos um pequeno problema. Tente novamente mais tarde.."
          },
          "400": {
            "description": "Existem campos vazios. || Insira um personagem real. || Esse personagem já foi criado. || Defina uma comissão entre 1% e 80%."
          },
          "401": {
            "description": "Sem permissão! || Token mal formatado! || Token inválido || O token não foi informado!"
          },
          "201": {
            "description": "NFT criada com sucesso!"
          }
        }
      }
    },
    "/characters/find-all": {
      "get": {
        "summary": "Lista de todas os personagens",
        "description": "Rota responsável por listar todos os personagens",
        "tags": ["Characters"],
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "500": {
            "description": "Ops, tivemos um pequeno problema. Tente novamente mais tarde."
          },
          "401": {
            "description": "O token não foi informado! || Token inválido || Token mal formatado!"
          },
          "404": {
            "description": "Não encontramos personagens cadastrados."
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Characters"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/characters/find/{id}": {
      "get": {
        "summary": "Busca um personagem pelo ID",
        "description": "Rota responsável por buscar um personagem pelo ID",
        "tags": ["Characters"],
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "description": "ID do personagem para buscar",
            "required": true
          }
        ],
        "responses": {
          "500": {
            "description": "Ops, tivemos um pequeno problema. Tente novamente mais tarde."
          },
          "400": {
            "description": "Id inválido."
          },
          "401": {
            "description": "O token não foi informado! || Token inválido || Token mal formatado!"
          },
          "404": {
            "description": "Id não encontrado."
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Characters"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/characters/search": {
      "get": {
        "summary": "Filtra os personagens pelo Nome",
        "description": "Rota responsável por filtrar os personagens pelo nome.",
        "tags": ["Characters"],
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "type": "string",
            "description": "Nome do personagem para Filtrar",
            "required": true
          }
        ],
        "responses": {
          "500": {
            "description": "Ops, tivemos um pequeno problema. Tente novamente mais tarde."
          },
          "404": {
            "description": "Desconhecemos esse personagem."
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Characters"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/characters/update/{id}": {
      "put": {
        "summary": "Editar um personagem pelo ID",
        "description": "Rota responsável por editar un personagem pelo ID",
        "tags": ["Characters"],
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "description": "ID do personagem para buscar",
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Characters"
              },
              "examples": {
                "Paletas": {
                  "value": {
                    "name": "Albert Einstein",
                    "price": 500,
                    "commission": 5
                  }
                }
              }
            }
          }
        },
        "responses": {
          "500": {
            "description": "Ops, tivemos um pequeno problema. Tente novamente mais tarde.."
          },
          "400": {
            "description": "Existem campos vazios. || Insira um personagem real. || Esse personagem já foi criado. || Defina uma comissão entre 1% e 80%. || Id inválido."
          },
          "404": {
            "description": "Id não encontrado."
          },
          "401": {
            "description": "Sem permissão! || Token mal formatado! || Token inválido || O token não foi informado!"
          },
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/characters/delete/{id}": {
      "delete": {
        "summary": "Apagar um personagem pelo ID",
        "description": "Rota responsável por apagar um personagem pelo ID",
        "tags": ["Characters"],
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "description": "Id do personagem para deleção",
            "required": true
          }
        ],
        "responses": {
          "500": {
            "description": "Ops, tivemos um pequeno problema. Tente novamente mais tarde."
          },
          "400": {
            "description": "Id inválido."
          },
          "401": {
            "description": "O token não foi informado! || Token inválido || Token mal formatado! || Sem permissão!"
          },
          "404": {
            "description": "Id não encontrado. || Não encontramos esse personagem em nossa lista. Talvez ele já tenha sido deletado."
          },
          "200": {
            "description": "NFT deletada com sucesso!"
          }
        }
      }
    },
    "/cart/create/{id}": {
      "post": {
        "summary": "Cria um carrinho de compras e adiciona novos personagens",
        "description": "Rota responsável por adicionar personagens ao carrinho de compras e criar um carrinho novo caso seja a primeira adição do usuário.",
        "tags": ["Carts"],
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "type": "string",
            "description": "Id do Personagem para adição ao carrinho",
            "required": true
          }
        ],
        "responses": {
          "500": {
            "description": "Ops, tivemos um pequeno problema. Tente novamente mais tarde."
          },
          "400": {
            "description": "O token não foi informado! || Token inválido || Token mal formatado! || Id inválido. || ${character.name} não está disponível. || Você já adicionou essa NFT ao carrinho."
          },
          "404": {
            "description": "Id não encontrado."
          },
          "201": {
            "description": "NFT adcionada ao carrinho!",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "items": {
                    "$ref": "#/components/schemas/Cart"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/cart/list": {
      "get": {
        "summary": "Exibe todos os personagens adicionados ao carrinho",
        "description": "Rota responsável por exibir todos os personagens adicionados ao carrinho",
        "tags": ["Carts"],
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "500": {
            "description": "Ops, tivemos um pequeno problema. Tente novamente mais tarde."
          },
          "400": {
            "description": "O token não foi informado! || Token inválido || Token mal formatado!"
          },
          "404": {
            "description": "Carrinho está vazio"
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "items": {
                    "$ref": "#/components/schemas/Cart"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/cart/delete/{id}": {
      "put": {
        "summary": "Deleta um personagem do carrinho",
        "description": "Rota responsável por deletar personagens do carrinho de compras pelo ID.",
        "tags": ["Carts"],
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "type": "string",
            "description": "Id do Personagem para remoção ao carrinho",
            "required": true
          }
        ],
        "responses": {
          "500": {
            "description": "Ops, tivemos um pequeno problema. Tente novamente mais tarde."
          },
          "400": {
            "description": "O token não foi informado! || Token inválido || Token mal formatado! || Id inválido. || Este item não existe no carrinho."
          },
          "404": {
            "description": "Id não encontrado. || O carrinho está vazio"
          },
          "200": {
            "description": "NFT deletada do carrinho",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "items": {
                    "$ref": "#/components/schemas/Cart"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/cart/buy": {
      "put": {
        "summary": "Efetua a compra das NFTs listadas no carrinho.",
        "description": "Rota responsável por efetuar a compra das NFTs listadas no carrinho.",
        "tags": ["Carts"],
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "500": {
            "description": "Ops, tivemos um pequeno problema. Tente novamente mais tarde."
          },
          "400": {
            "description": "O token não foi informado! || Token inválido. || Token mal formatado! || Id inválido. || Este item não existe no carrinho. || Moedas insuficientes para fazer a compra."
          },
          "404": {
            "description": "Carrinho está vazio."
          },
          "200": {
            "description": "Compra finalizada com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "items": {
                    "$ref": "#/components/schemas/Cart"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/marketplace/create-sale-order/{id}": {
      "post": {
        "summary": "Coloca suas NFTs a venda para outros usuários",
        "description": "Rota responsável por adicionar personagens à venda entre usuários.", 
        "tags": ["Marketplace"],
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "type": "string",
            "description": "Id do Personagem para venda.",
            "required": true
          }
        ],
        "responses": {
          "500": {
            "description": "Ops, tivemos um pequeno problema. Tente novamente mais tarde."
          },
          "400": {
            "description": "O token não foi informado! || Token inválido || Token mal formatado! || Id inválido. || Essa NFT não é sua propriedade || Digite um valor para venda || ${i.name} já está à venda."
          },
          "404": {
            "description": "Não possui NFTs."
          },
          "201": {
            "description": "NFT adcionada ao marketplace.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "items": {
                    "$ref": "#/components/schemas/Cart"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/marketplace/find": {
      "get": {
        "summary": "Busca todas as ofertas do Marketplace",
        "description": "Rota responsável por mostrar todos as NFTs adquiridas a venda.", 
        "tags": ["Marketplace"],
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "500": {
            "description": "Ops, tivemos um pequeno problema. Tente novamente mais tarde."
          },
          "400": {
            "description": "O token não foi informado! || Token inválido || Token mal formatado! || Id inválido."
          },
          "404": {
            "description": "Marketplace vazio"
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "items": {
                    "$ref": "#/components/schemas/Cart"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/marketplace//delete-character/{id}": {
      "delete": {
        "summary": "Remove uma oferta do marketplace",
        "description": "Rota responsável por remover uma oferta do marketplace.", 
        "tags": ["Marketplace"],
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "type": "string",
            "description": "Id do Personagem para venda.",
            "required": true
          }
        ],
        "responses": {
          "500": {
            "description": "Ops, tivemos um pequeno problema. Tente novamente mais tarde."
          },
          "400": {
            "description": "O token não foi informado! || Token inválido || Token mal formatado! || Id inválido. || Você ainda não tem este item à venda."
          },
          "404": {
            "description": "Nenhum produto adicionado ao Marketplace."
          },
          "200": {
            "description": "NFT deletada com sucesso.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "items": {
                    "$ref": "#/components/schemas/Cart"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "username": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "photo": {
            "type": "string"
          },
          "coins": {
            "type": "number"
          },
          "admin": {
            "type": "boolean"
          },
          "properties": {
            "type": "array"
          }
        }
      },
      "Characters": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "image": {
            "type": "string"
          },
          "price": {
            "type": "number"
          },
          "commission": {
            "type": "number"
          },
          "user": {
            "type": "ObjectId"
          },
          "acquired": {
            "type": "boolean"
          }
        }
      },
      "Cart": {
        "type": "object",
        "properties": {
          "characters": {
            "type": "array"
          },
          "user": {
            "type": "ObjectId",
            "ref": "users"
          },
          "finished": {
            "type": "boolean"
          }
        }
      },
      "Marketplace": {
        "type": "object",
        "properties": {
          "user": {
            "type": "ObjectId"
          },
          "characters": {
            "type": "array"
          }
        }
      }
    }
  }
}
